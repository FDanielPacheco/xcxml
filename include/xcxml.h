 /***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Introduction
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************//**
 * @file      xmlparser.h
 * 
 * @version   1.0.0
 *
 * @date      01-10-2025
 *
 * @brief     A wrapper function designed to parse xml descriptors easily.  
 *  
 * @author    Fábio D. Pacheco, 
 * @email     fabio.d.pacheco@inesctec.pt or pacheco.castro.fabio@gmail.com
 *
 * @copyright Copyright (c) [2025] [Fábio D. Pacheco]
 * 
 * @note      Manuals:
 *            https://gnome.pages.gitlab.gnome.org/libxml2/html/
 * 
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Definition file
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

#ifndef XMLPARSER_H
#define XMLPARSER_H

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Imported libraries
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

#include <stddef.h>
#include <stdint.h>

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * External C++ extern macro
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

#ifdef __cplusplus  
extern "C" {        
#endif

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Prototypes
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************//**
 * @brief The function attempts to open the `file_path` to the xml file, and looks for the `key_tree` (e.g., /first/second/third/tag).
 * Upon success, fills the `buf` variable.
 *  
 * @param[in] file_path The path to the xml file.
 * @param[in] key_tree The tag path inside the xml file (e.g., /first/second/third/tag).
 * @param[out] buf The variable to be filled with tag value.
 * @param[in] buf_len The total size of `buf`.
 * 
 * @return Upon success on finding the `key_tree`, it fills the `buf` variable, and it returns 0. \n
 * Otherwise, -1 is returned, and errno is set to indicate the error.
 *
 *  - 0: No tag found, based on `key_tree` \n
 *  - `EINVAL`: Invalid argument \n
 *  - `ENOENT`: No file was found \n
 * 
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
int8_t xml_get_value( 
  const char * file_path, 
  const char * key_tree, 
  char * buf, 
  size_t buf_len
);

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * External C++ extern macro
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

#ifdef __cplusplus  
}
#endif

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Definition file
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

#endif

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * End of file
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
